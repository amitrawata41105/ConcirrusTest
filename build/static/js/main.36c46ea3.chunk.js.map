{"version":3,"sources":["assets/the-godfather.svg","components/header/index.tsx","components/leftSection/index.tsx","components/rightSection/index.tsx","components/main/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Header","className","Row","Col","xs","md","style","background","Image","src","logo","height","width","LeftSection","props","employees","onClick","map","item","i","fontSize","color","n","isSelected","name","RightSection","mapValue","x","in_min","in_max","out_min","out_max","employee","onSlide","useState","popularity","value","onChange","console","log","image","rounded","border","htmlFor","type","id","radius","target","min","max","biography","dataEmployees","data","forEach","Main","selectedEmployee","setSelectedEmployee","setEmployees","e","onLeftSectionClickHandler","onSlideHandler","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36c46ea3.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/the-godfather.dc4cf68b.svg\";","import React from 'react';\r\nimport { Col, Image, Row } from 'react-bootstrap';\r\nimport logo from '../../assets/the-godfather.svg';\r\nimport './style.css';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className=\"header\">\r\n\r\n            <Row>\r\n                <Col xs={2} md={3}>\r\n                    <div style={{ background: '#25252d96' }} className=\"d-flex justify-content-center light-bg\">\r\n                        <Image src={logo} style={{\r\n                            height: '400px',\r\n                            width: '182Px',\r\n                        }} />\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { Employee } from '../../types/Employee';\r\nimport './style.css';\r\ninterface Props {\r\n    employees: Employee[],\r\n    onClick: any;\r\n}\r\n\r\nfunction LeftSection(props: Props) {\r\n    const { employees, onClick } = props;\r\n    const fColor = (n: number) => {\r\n        return n % 2 ? '' : '#3dc3e8';\r\n    }\r\n    return (\r\n        <>\r\n            {/* <ListGroup>\r\n                {employees.map((item) => <ListGroup.Item onClick={() => onClick(item)}>{item.name}</ListGroup.Item>)}\r\n            </ListGroup> */}\r\n            <div className=\"leftSection\">\r\n                <div className=\"btn list p-0\">\r\n                    {employees.map((item, i: number) => <div key={item.name}\r\n                        style={{ fontSize: `${item.fontSize}px`, color: `${fColor(i)}` }}\r\n                        className={item.isSelected ? 'select fontColor' : ''} onClick={() => onClick(item)}>{item.name}</div>)}\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default LeftSection;\r\n","import React, { useState } from 'react';\r\nimport { Button, Card, Col, Image, ListGroup, ProgressBar, Row } from 'react-bootstrap';\r\nimport { Employee } from '../../types/Employee';\r\nimport './style.css'\r\n\r\ninterface Props {\r\n    employee: Employee | null;\r\n    onSlide: (n: number, e: Employee) => void;\r\n}\r\n\r\nfunction RightSection(props: Props) {\r\n    const mapValue = (x: number, in_min: number, in_max: number, out_min: number, out_max: number) => (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\r\n    const { employee, onSlide } = props;\r\n    const [value, onChange] = useState(mapValue(employee?.popularity as number, 1, 6, 1, 100));\r\n    console.log(\"employees\", employee);\r\n\r\n\r\n    if (!employee) return null;\r\n    return (\r\n        <>\r\n            <Row className=\"move-top\" >\r\n                <Col xs={2} md={2}>\r\n                    <Image src={employee.image} rounded width=\"135\" style={{ border: '1px solid #cacaca' }} />\r\n                </Col>\r\n                <Col xs={10} md={9} >\r\n                    <div className=\"name\">\r\n                        {employee.name}\r\n                    </div>\r\n                    <div className=\"popularity\">\r\n                        <div className=\"my-5\">\r\n                            <Row>\r\n                                <Col xs={3} md={3} >\r\n                                    <label htmlFor=\"customRange1\">Popularity</label>\r\n                                </Col>\r\n                                <Col xs={10} md={9} >\r\n                                    <input type=\"range\" className=\"custom-range\" id=\"customRange1\"\r\n                                        onChange={({ target: { value: radius } }) => {\r\n                                            onChange(radius as any);\r\n\r\n                                            onSlide(mapValue(radius as any, 1, 100, 25, 44) as any, employee);\r\n                                        }}\r\n                                        min=\"1\" max=\"100\" value={value} />\r\n                                </Col>\r\n                            </Row>\r\n                        </div>\r\n\r\n                    </div>\r\n                    <div className=\"biography\">\r\n                        <h3>Biography</h3>\r\n                        {employee.biography}\r\n                    </div>\r\n                </Col>\r\n            </Row>\r\n\r\n        </>\r\n    );\r\n}\r\n\r\nexport default RightSection;\r\n","import React, { useState } from 'react';\r\nimport Header from '../header'\r\nimport data from '../../assets/EmployeeData.json'\r\nimport LeftSection from '../leftSection';\r\nimport { Employee } from '../../types/Employee';\r\nimport RightSection from '../rightSection';\r\nimport { Col, Container, Row } from 'react-bootstrap';\r\nimport './style.css';\r\n//default\r\n\r\n\r\nconst mapValue = (x: number, in_min: number, in_max: number, out_min: number, out_max: number) => (x - in_min) * (out_max - out_min) / (in_max - in_min) + out_min;\r\n\r\nconst dataEmployees = data.employees as Employee[];\r\n\r\ndataEmployees[0].isSelected = true;\r\n\r\ndataEmployees[0].fontSize = mapValue(dataEmployees[0].popularity, 1, 6, 32, 44);\r\ndataEmployees.forEach((item) => {\r\n    item.fontSize = mapValue(item.popularity, 1, 6, 25, 44);\r\n});\r\n\r\nfunction Main() {\r\n    const [selectedEmployee, setSelectedEmployee] = useState<Employee>(dataEmployees[0]);\r\n    const [employees, setEmployees] = useState<Employee[]>(data.employees as any);\r\n    console.log(employees);\r\n    const onLeftSectionClickHandler = (e: Employee) => {\r\n        console.log(e);\r\n        setSelectedEmployee(e);\r\n        employees.forEach((item) => {\r\n            item.isSelected = false;\r\n            //TODO we need to check id instead of name\r\n            if (item.name === e.name) {\r\n                item.isSelected = true;\r\n            }\r\n        });\r\n        setEmployees([...employees]);\r\n    }\r\n    const onSlideHandler = (n: number, e: Employee) => {\r\n        console.log('n', n)\r\n        employees.forEach((item) => {\r\n            //TODO we need to check id instead of name\r\n            if (item.name === e.name) {\r\n                item.fontSize = n;\r\n            }\r\n        });\r\n        setEmployees([...employees]);\r\n    }\r\n    return (\r\n        <>\r\n\r\n            <Header />\r\n            <Row className=\"main\">\r\n                <Col xs={2} md={3}>\r\n                    <LeftSection employees={employees} onClick={(e: Employee) => onLeftSectionClickHandler(e)} />\r\n                </Col>\r\n                <Col xs={10} md={9}>\r\n                    <RightSection employee={selectedEmployee} onSlide={(n, e) => onSlideHandler(n, e)} />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default Main;\r\n","import React from 'react';\nimport Main from './components/main';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './App.css';\nfunction App() {\n  return (\n    <div >\n      <Main />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}